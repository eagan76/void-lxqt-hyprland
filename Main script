#!/bin/bash

# Function to check if a command exists
command_exists() {
    command -v "$1" >/dev/null 2>&1
}

# Add the repository for Hyprland (if not already added)
if ! grep -q "https://raw.githubusercontent.com/Makrennel/hyprland-void/repository-x86_64-glibc" /etc/xbps.d/*; then
  echo "Adding the repository for Hyprland..."
  echo "repository=https://raw.githubusercontent.com/Makrennel/hyprland-void/repository-x86_64-glibc" | sudo tee /etc/xbps.d/00-hyprland-repo.conf
fi

# Update package list
echo "Updating package list..."
sudo xbps-install -S

# Install necessary packages with the -S flag to ensure dependencies are met
echo "Installing Wayland, LXQt, Hyprland, SDDM, Kitty, PipeWire, PulseAudio, xdg-desktop-portal, and curl..."
sudo xbps-install -Sy wayland wayland-protocols lxqt hyprland lxqt-qtplugin sddm kitty pipewire pipewire-alsa pipewire-pulse \
xdg-desktop-portal xdg-desktop-portal-wlr pulseaudio pulseaudio-utils pavucontrol curl imagemagick

# Check for successful installation of essential packages
REQUIRED_PACKAGES=("wayland" "lxqt" "hyprland" "sddm" "kitty" "pipewire" "pulseaudio" "xdg-desktop-portal" "xdg-desktop-portal-wlr" "curl")

for package in "${REQUIRED_PACKAGES[@]}"; do
    if ! command_exists "$package" && ! xbps-query -Rs "$package" >/dev/null; then
        echo "Error: $package installation failed. Please ensure it is available in the repositories."
        exit 1
    fi
done

# Remove other display managers if installed
echo "Removing other display managers if they exist..."
UNWANTED_DISPLAY_MANAGERS=("lightdm" "gdm" "lxdm" "wdm")
for dm in "${UNWANTED_DISPLAY_MANAGERS[@]}"; do
    if xbps-query -Rs "$dm" >/dev/null; then
        echo "Uninstalling $dm..."
        sudo xbps-remove -Ry "$dm"
    fi
done

# Enable SDDM as the default display manager
echo "Enabling SDDM as the default display manager..."
if [ ! -L /var/service/sddm ]; then
    sudo ln -s /etc/sv/sddm /var/service/
else
    echo "SDDM is already enabled."
fi

# Enable PipeWire services
echo "Enabling PipeWire services..."
if [ ! -L /var/service/pipewire ]; then
    sudo ln -s /etc/sv/pipewire /var/service/
fi
if [ ! -L /var/service/pipewire-pulse ]; then
    sudo ln -s /etc/sv/pipewire-pulse /var/service/
fi

# Enable xdg-desktop-portal
echo "Enabling xdg-desktop-portal service..."
if [ ! -L /var/service/xdg-desktop-portal ]; then
    sudo ln -s /etc/sv/xdg-desktop-portal /var/service/
fi
if [ ! -L /var/service/xdg-desktop-portal-wlr ]; then
    sudo ln -s /etc/sv/xdg-desktop-portal-wlr /var/service/
fi

# Set up SDDM custom theme directory
SDDM_THEME_DIR="/usr/share/sddm/themes/stickman-theme"
sudo mkdir -p "$SDDM_THEME_DIR"

# Download necessary fonts (Dancing Script)
echo "Downloading Dancing Script font..."
FONT_DIR="/usr/share/fonts/truetype/dancing-script"
sudo mkdir -p "$FONT_DIR"
cd /tmp
wget https://github.com/google/fonts/raw/main/ofl/dancingscript/DancingScript%5Bwght%5D.ttf
sudo mv DancingScript[wght].ttf "$FONT_DIR"

# SDDM Theme Files
echo "Setting up the SDDM theme..."
cat <<EOL | sudo tee "$SDDM_THEME_DIR/theme.conf"
[General]
background=/usr/share/sddm/themes/stickman-theme/background.jpg
type=QML

[Greeter]
position=center
EOL

# Create the QML file for SDDM layout
echo "Creating QML layout file..."
cat <<EOL | sudo tee "$SDDM_THEME_DIR/Main.qml"
import QtQuick 2.0
import QtQuick.Controls 2.0
import org.kde.plasma.core 2.0 as PlasmaCore

Item {
    id: root

    Rectangle {
        id: backgroundRect
        anchors.fill: parent
        gradient: Gradient {
            GradientStop { position: 0.0; color: "yellow" }
            GradientStop { position: 1.0; color: "purple" }
        }
    }

    // Login form on the left
    Column {
        anchors.centerIn: parent
        spacing: 20

        PlasmaCore.Label {
            text: "Username:"
            font.pixelSize: 24
            color: "white"
        }

        TextField {
            id: usernameField
            width: 300
            font.pixelSize: 24
        }

        PlasmaCore.Label {
            text: "Password:"
            font.pixelSize: 24
            color: "white"
        }

        TextField {
            id: passwordField
            width: 300
            echoMode: TextInput.Password
            font.pixelSize: 24
        }

        Button {
            text: "Login"
            onClicked: {
                // Trigger the login function
                login()
            }
        }
    }

    // "Stickman-OS" text centered
    Text {
        id: stickmanText
        text: "Stickman-OS"
        anchors.centerIn: parent
        font.pixelSize: 72
        font.family: "Dancing Script"
        color: "mediumgrey"
    }
}
EOL

# Set the background image
echo "Generating background image..."
cat <<EOL | sudo tee "$SDDM_THEME_DIR/background.jpg"
/* Set your background gradient image or custom background here */
EOL

# Update SDDM to use the new theme
echo "Configuring SDDM to use the new theme..."
sudo sed -i 's/^Current=.*/Current=stickman-theme/' /etc/sddm.conf

# Create the desktop background image with "Stickman-OS" text
echo "Generating desktop background with gradient and centered text..."
BACKGROUND_IMG="/usr/share/lxqt/themes/stickman-background/default-background.png"
convert -size 1920x1080 gradient:yellow-purple -font Dancing-Script -pointsize 120 \
    -gravity center -fill mediumgrey -annotate +0+0 'Stickman-OS' "$BACKGROUND_IMG"

# Set LXQt default desktop background
LXQT_BACKGROUND_DIR="/usr/share/lxqt/themes/stickman-background"
sudo mkdir -p "$LXQT_BACKGROUND_DIR"

echo "Setting up default LXQt background..."
cat <<EOL | sudo tee "$LXQT_BACKGROUND_DIR/default-background.png"
/* Gradient background image with Stickman-OS text centered */
EOL

# Set LXQt to use the custom background
echo "Configuring LXQt to use the new background..."
mkdir -p ~/.config/pcmanfm-qt/lxqt/settings.conf
cat <<EOL | tee ~/.config/pcmanfm-qt/lxqt/settings.conf
[Desktop]
wallpaper=/usr/share/lxqt/themes/stickman-background/default-background.png
EOL

# Restart SDDM to apply changes
echo "Restarting SDDM to apply changes..."
sudo sv restart sddm

echo "SDDM and LXQt theme setup complete."
