#!/bin/bash

# Enable the nonfree repository if not already enabled
if ! grep -q "repository-nonfree" /etc/xbps.d/*; then
    echo "Enabling the nonfree repository for additional packages..."
    sudo xbps-install -Syu xbps
    echo "repository=https://repo.voidlinux.org/current/nonfree" | sudo tee /etc/xbps.d/10-repo-nonfree.conf
    echo "repository=https://repo.voidlinux.org/current/multilib/nonfree" | sudo tee -a /etc/xbps.d/10-repo-nonfree.conf
fi

# Update package list and install SDDM and ImageMagick
echo "Updating repositories and installing SDDM and ImageMagick..."
sudo xbps-install -Syu sddm imagemagick
if [ $? -ne 0 ]; then
    echo "Error: Failed to install SDDM and ImageMagick."
    exit 1
fi

# Enable SDDM with runit
echo "Enabling SDDM with runit..."
if [ ! -L /var/service/sddm ]; then
    sudo ln -s /etc/sv/sddm /var/service/
else
    echo "SDDM is already enabled."
fi

# Set up SDDM custom theme directory
SDDM_THEME_DIR="/usr/share/sddm/themes/stickman-theme"
sudo mkdir -p "$SDDM_THEME_DIR"
if [ $? -ne 0 ]; then
    echo "Error: Failed to create theme directory."
    exit 1
fi

# SDDM Theme Configuration
echo "Setting up the SDDM theme..."
cat <<EOL | sudo tee "$SDDM_THEME_DIR/theme.conf"
[General]
background=$SDDM_THEME_DIR/background.png
type=QML

[Greeter]
position=center
EOL

# Create the QML file for SDDM layout
echo "Creating QML layout file..."
cat <<EOL | sudo tee "$SDDM_THEME_DIR/Main.qml"
import QtQuick 2.0
import QtQuick.Controls 2.0

Item {
    id: root

    Rectangle {
        id: backgroundRect
        anchors.fill: parent
        gradient: Gradient {
            GradientStop { position: 0.0; color: "yellow" }
            GradientStop { position: 1.0; color: "purple" }
        }
    }

    // Login form on the left
    Column {
        anchors.centerIn: parent
        spacing: 20

        Text {
            text: "Username:"
            font.pixelSize: 24
            color: "white"
        }

        TextField {
            id: usernameField
            width: 300
            font.pixelSize: 24
        }

        Text {
            text: "Password:"
            font.pixelSize: 24
            color: "white"
        }

        TextField {
            id: passwordField
            width: 300
            echoMode: TextInput.Password
            font.pixelSize: 24
        }

        Button {
            text: "Login"
            onClicked: {
                // Trigger the login function
                login()
            }
        }
    }

    // "Stickman-OS" text centered
    Text {
        id: stickmanText
        text: "Stickman-OS"
        anchors.centerIn: parent
        font.pixelSize: 72
        color: "mediumgrey"
    }
}
EOL

# Create the background image with gradient and centered text for SDDM
echo "Generating background image for SDDM..."
convert -size 1920x1080 gradient:yellow-purple -pointsize 120 \
    -gravity center -fill mediumgrey -annotate +0+0 'Stickman-OS' "$SDDM_THEME_DIR/background.png"
if [ $? -ne 0 ]; then
    echo "Error: Failed to generate background image."
    exit 1
fi

# Configure SDDM to use the custom theme by modifying /etc/sddm.conf
SDDM_CONF="/etc/sddm.conf"
if [ ! -f "$SDDM_CONF" ]; then
    echo "[Theme]" | sudo tee -a "$SDDM_CONF"
fi

# Set theme and confirm it was applied
echo "Configuring SDDM to use the new theme..."
sudo sed -i '/^\[Theme\]/,/^Current/ {s/^Current=.*/Current=stickman-theme/}' "$SDDM_CONF"
grep -q "Current=stickman-theme" "$SDDM_CONF"
if [ $? -ne 0 ]; then
    echo "Error: Failed to set theme in sddm.conf."
    exit 1
fi

# Restart SDDM and check if it's running
echo "Restarting SDDM to apply changes..."
sudo sv restart sddm
if [ $? -ne 0 ]; then
    echo "Error: SDDM service failed to restart."
    exit 1
fi

# Check if SDDM service is active
sleep 2  # Allow a moment for SDDM to start
if sudo sv status sddm | grep -q "run"; then
    echo "SDDM setup with custom theme complete and is running successfully."
else
    echo "Error: SDDM service failed to start."
    exit 1
fi
